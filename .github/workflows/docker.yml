name: Build & Push Docker Images (GHCR)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ts-mern-azure-starter

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [backend, frontend]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (emulation for cross-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image names/tags
        id: vars
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_PREFIX }}-${{ matrix.app }}
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
          echo "SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      # ------- build per-arch (amd64) -------
      - name: Build amd64 - ${{ matrix.app }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.app }}
          file: ./${{ matrix.app }}/Dockerfile.prod
          platforms: linux/amd64
          push: true
          provenance: false
          sbom: false
          tags: ${{ steps.vars.outputs.IMAGE }}:amd64-${{ steps.vars.outputs.SHA }}
          build-args: |
            ${{ matrix.app == 'frontend' && format('VITE_API_URL={0}', vars.PROD_VITE_API_URL) || '' }}

      # ------- build per-arch (arm64) -------
      - name: Build arm64 - ${{ matrix.app }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.app }}
          file: ./${{ matrix.app }}/Dockerfile.prod
          platforms: linux/arm64
          push: true
          provenance: false
          sbom: false
          tags: ${{ steps.vars.outputs.IMAGE }}:arm64-${{ steps.vars.outputs.SHA }}
          build-args: |
            ${{ matrix.app == 'frontend' && format('VITE_API_URL={0}', vars.PROD_VITE_API_URL) || '' }}

      # ------- compose the multi-arch manifest -------
      - name: Create multi-arch manifest (${{ matrix.app }})
        run: |
          IMAGE="${{ steps.vars.outputs.IMAGE }}"
          SHA="${{ steps.vars.outputs.SHA }}"
          BR="${{ steps.vars.outputs.BRANCH }}"

          docker buildx imagetools create \
            -t "${IMAGE}:latest" \
            -t "${IMAGE}:${BR}" \
            -t "${IMAGE}:${SHA}" \
            "${IMAGE}:amd64-${SHA}" \
            "${IMAGE}:arm64-${SHA}"

          # optional: show what we published
          docker buildx imagetools inspect "${IMAGE}:latest"
