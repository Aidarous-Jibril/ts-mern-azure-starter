name: CI + Build/Push (GHCR) + Deploy (Azure)

on:
  push:
    branches:
      - "**" # CI on all branches
  pull_request: # CI on PRs
  workflow_dispatch: # manual run

permissions:
  contents: read
  packages: write

env:
  IMAGE_PREFIX: ts-mern-azure-starter

concurrency: docker-${{ github.ref }}

jobs:
  # ---------- CI ----------
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [backend, frontend]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ matrix.project }}/package-lock.json
      - name: Install
        working-directory: ${{ matrix.project }}
        run: npm ci
      - name: Lint (if present)
        working-directory: ${{ matrix.project }}
        run: npm run -s lint || true
      - name: Typecheck (if present)
        working-directory: ${{ matrix.project }}
        run: npm run -s typecheck || true
      - name: Build (if present)
        working-directory: ${{ matrix.project }}
        env:
          VITE_API_URL: /api
        run: npm run -s build || true

  # ---------- Build & Push ----------
  build-and-push:
    needs: ci
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [backend, frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Derive owner/tags
        run: |
          echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_ENV"
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"
          SAFE_BRANCH=$(echo "${GITHUB_REF_NAME}" | tr '/ ' '--')
          echo "BRANCH_TAG=$SAFE_BRANCH" >> "$GITHUB_ENV"

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push ${{ matrix.app }}
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.app }}
          file: ./${{ matrix.app }}/Dockerfile.prod
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_PREFIX }}-${{ matrix.app }}:latest
            ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_PREFIX }}-${{ matrix.app }}:${{ env.BRANCH_TAG }}
            ghcr.io/${{ env.OWNER_LC }}/${{ env.IMAGE_PREFIX }}-${{ matrix.app }}:${{ env.SHORT_SHA }}
          build-args: |
            ${{ matrix.app == 'frontend' && 'VITE_API_URL=/api' || '' }}
          provenance: false
          sbom: false

  # ---------- Deploy to Azure ----------
  deploy-azure:
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    env:
      AZURE_RG: tsmern-rg
      AZURE_WEBAPP: tsmern-webapp-aidarous
    steps:
      - uses: actions/checkout@v4

      - name: Azure login (service principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare pinned compose (by short SHA) in workspace
        run: |
          SHA=${GITHUB_SHA::7}
          OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}

          cat > compose.yaml <<EOF
          version: "3.9"
          services:
            frontend:
              image: ghcr.io/${OWNER_LC}/ts-mern-azure-starter-frontend:${SHA}
              restart: unless-stopped
              depends_on: [backend]
              expose:
                - "80"

            backend:
              image: ghcr.io/${OWNER_LC}/ts-mern-azure-starter-backend:${SHA}
              restart: unless-stopped
              environment:
                NODE_ENV: production
                PORT: "8080"
                MONGO_URI: \${MONGO_URI}
              expose:
                - "8080"
          EOF

          echo "Using images:"; grep 'image:' compose.yaml

      - name: Apply compose to Web App
        uses: azure/cli@v2
        with:
          inlineScript: |
            az webapp config container set \
              -g "$AZURE_RG" -n "$AZURE_WEBAPP" \
              --multicontainer-config-type compose \
              --multicontainer-config-file "compose.yaml"

      - name: Restart and show URL
        uses: azure/cli@v2
        with:
          inlineScript: |
            az webapp restart -g "$AZURE_RG" -n "$AZURE_WEBAPP"
            az webapp show -g "$AZURE_RG" -n "$AZURE_WEBAPP" --query defaultHostName -o tsv
